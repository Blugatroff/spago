name: build

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    container: ${{ matrix.image }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
          - os: macOS-latest
          - os: windows-latest
    steps:
      # We need a proper Git repository, but the checkout step will unpack a tarball instead of doing a clone
      # if the Git version is less than 2.18.
      - name: Install a newer version of Git (Linux)
        if: runner.os == 'Linux'
        run: |
          . /etc/os-release
          echo deb http://deb.debian.org/debian "$VERSION_CODENAME"-backports main >> /etc/apt/sources.list
          apt-get update && apt-get install -y git/"$VERSION_CODENAME"-backports

      # We set LF endings so that the Windows environment is consistent with the rest
      # See here for context: https://github.com/actions/checkout/issues/135
      - name: Set git to use LF
        run: |
          git config --global core.autocrlf false
          git config --global core.eol lf
          git config --global core.longpaths true

      - uses: actions/checkout@v2

      # NB: We install gnu-tar because BSD tar is buggy on Github's macos machines,
      # and it breaks the cache: https://github.com/actions/cache/issues/403
      - name: Install GNU tar (macOS)
        if: runner.os == 'macOS'
        run: |
          brew install gnu-tar
          echo "/usr/local/opt/gnu-tar/libexec/gnubin" >> $GITHUB_PATH

      - name: Setup node and npm
        uses: actions/setup-node@v2
        with:
          node-version: 18

      - name: Cache NPM dependencies
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - name: Setup PureScript dependencies
        run: npm i --global purescript@0.15.10 esbuild@0.17.19 spago@0.93.11 purs-tidy@latest

      - name: Cache PureScript dependencies
        uses: actions/cache@v2
        with:
          key: ${{ runner.os }}-spago-${{ hashFiles('**/spago.yaml') }}
          path: |
            .spago
            output

      - name: Install NPM dependencies
        run: npm install

      - name: Install PureScript dependencies
        run: spago install

      - name: Build executable
        run: spago bundle -p spago-bin

      - name: Run tests
        run: spago test

      - name: Check formatting (Linux only)
        if: matrix.os == 'ubuntu-latest'
        run: npm run format:check
